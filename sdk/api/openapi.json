{
  "openapi": "3.1.0",
  "info": {
    "title": "Chipi Pay API",
    "description": "API for buying services with Chipi Pay",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.chipipay.com/v1"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/skus": {
      "get": {
        "summary": "",
        "description": "Retrieve a list of available services (SKUs) for purchase",
        "parameters": [
          {
            "name": "categories",
            "in": "query",
            "description": "Filter by service categories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "TELEPEAJE",
                  "TELEFONIA",
                  "GENERAL",
                  "TESORERIA",
                  "LUZ",
                  "INTERNET",
                  "TV",
                  "MOVILIDAD",
                  "RECARGAS",
                  "GIFT_CARDS",
                  "GAMING",
                  "VENTAS_CATALOGO",
                  "DEPORTES",
                  "STREAMING"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of SKUs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sku"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/sku-transactions": {
      "post": {
        "summary": "Buy Service",
        "description": "Purchase a service using blockchain transaction",
        "requestBody": {
          "description": "Service purchase request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuyServiceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkuTransaction"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Sku": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the SKU"
          },
          "providerId": {
            "type": "string",
            "description": "Provider identifier"
          },
          "name": {
            "type": "string",
            "description": "Display name of the service"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the service"
          },
          "category": {
            "type": "string",
            "enum": [
              "TELEPEAJE",
              "TELEFONIA",
              "GENERAL",
              "TESORERIA",
              "LUZ",
              "INTERNET",
              "TV",
              "MOVILIDAD",
              "RECARGAS",
              "GIFT_CARDS",
              "GAMING",
              "VENTAS_CATALOGO",
              "DEPORTES",
              "STREAMING"
            ],
            "description": "Service category"
          },
          "skuProvider": {
            "type": "object",
            "description": "Provider information"
          },
          "referenceRegexValidation": {
            "type": "string",
            "description": "Regex pattern for validating reference input"
          },
          "referenceLabel": {
            "type": "string",
            "description": "Label for the reference field"
          },
          "amountRegexValidation": {
            "type": "string",
            "description": "Regex pattern for validating amount input"
          },
          "amountLabel": {
            "type": "string",
            "description": "Label for the amount field"
          },
          "fixedAmount": {
            "type": "number",
            "description": "Fixed amount for the service (if applicable)"
          },
          "canCheckSkuReference": {
            "type": "boolean",
            "description": "Whether the SKU reference can be validated"
          },
          "logoUrl": {
            "type": "string",
            "description": "URL to the service logo"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 timestamp of when the SKU was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 timestamp of when the SKU was last updated"
          }
        },
        "required": ["id", "providerId", "name", "category", "skuProvider", "referenceRegexValidation", "referenceLabel", "amountRegexValidation", "amountLabel", "canCheckSkuReference"]
      },
      "BuyServiceRequest": {
        "type": "object",
        "properties": {
          "walletAddress": {
            "type": "string",
            "description": "The wallet address that made the payment transaction"
          },
          "skuId": {
            "type": "string",
            "description": "The SKU ID of the service you want to purchase"
          },
          "chain": {
            "type": "string",
            "enum": ["STARKNET", "BASE", "ARBITRUM", "OPTIMISM", "ROOTSTOCK", "SCROLL"],
            "description": "The blockchain network ID"
          },
          "chainToken": {
            "type": "string",
            "enum": ["USDC", "ETH", "STRK", "SLINK", "ALF", "BROTHER", "ARB", "DOC"],
            "description": "The token used for payment"
          },
          "mxnAmount": {
            "type": "number",
            "description": "The amount in MXN (Mexican Pesos) for the service"
          },
          "reference": {
            "type": "string",
            "description": "A unique reference number for this transaction (e.g., phone number, account number)"
          },
          "transactionHash": {
            "type": "string",
            "description": "The transaction hash from the blockchain payment"
          }
        },
        "required": ["walletAddress", "skuId", "chain", "chainToken", "mxnAmount", "reference", "transactionHash"]
      },
      "SkuTransaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this transaction"
          },
          "orgId": {
            "type": "string",
            "description": "Organization ID that created the transaction"
          },
          "walletAddress": {
            "type": "string",
            "description": "The wallet address that made the payment"
          },
          "skuId": {
            "type": "string",
            "description": "The SKU ID of the purchased service"
          },
          "mxnAmount": {
            "type": "number",
            "description": "The amount in MXN"
          },
          "usdAmount": {
            "type": "number",
            "description": "The amount in USD"
          },
          "reference": {
            "type": "string",
            "description": "The reference number provided"
          },
          "fileNumber": {
            "type": "string",
            "description": "File number for the transaction (if applicable)"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "processing", "completed", "failed"],
            "description": "Current status of the transaction"
          },
          "chain": {
            "type": "string",
            "enum": ["STARKNET", "BASE", "ARBITRUM", "OPTIMISM", "ROOTSTOCK", "SCROLL"],
            "description": "The blockchain network used"
          },
          "chainToken": {
            "type": "string",
            "enum": ["USDC", "ETH", "STRK", "SLINK", "ALF", "BROTHER", "ARB", "DOC"],
            "description": "The token used for payment"
          },
          "transactionHash": {
            "type": "string",
            "description": "The blockchain transaction hash"
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message if the transaction failed"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 timestamp of when the transaction was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 timestamp of when the transaction was last updated"
          }
        },
        "required": ["id", "orgId", "walletAddress", "skuId", "mxnAmount", "usdAmount", "reference", "status", "chain", "chainToken", "transactionHash", "createdAt", "updatedAt"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error code"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          }
        },
        "required": ["error", "message"]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}